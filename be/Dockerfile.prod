# Build stage (use debian for python3 integrated)
FROM node:22.14-bookworm-slim AS build

# Install OpenSSL explicitly
RUN apt-get update -y && apt-get install -y openssl ca-certificates

# Need a live DB connection during build time
ARG DATABASE_URL
ARG ACCESS_TOKEN_SECRET
ARG REFRESH_TOKEN_SECRET

ENV DATABASE_URL=$DATABASE_URL
ENV ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET
ENV REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET

WORKDIR /app

COPY package*.json ./

RUN npm ci

COPY . .
# Explicitly overwrite .env with .env.production
COPY .env.production ./.env

RUN npx prisma migrate deploy
RUN npx prisma generate
RUN npx prisma generate --sql

RUN npm run build

# Production stage
FROM node:22.14-bookworm-slim AS production

WORKDIR /app

COPY --from=build /app/dist ./dist
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/package*.json ./
COPY --from=build /app/.env ./.env

RUN npm prune --production

EXPOSE 8080

CMD ["node", "dist/index.js"]