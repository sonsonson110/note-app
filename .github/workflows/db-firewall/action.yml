name: 'Database Firewall Management'
description: 'Creates and removes PostgreSQL firewall rules for CI/CD'

inputs:
  resource-group:
    description: 'Azure resource group name'
    required: true
  server-name:
    description: 'PostgreSQL server name'
    required: true
  operation:
    description: 'Operation to perform (add or remove)'
    required: true
    default: 'add'

outputs:
  rule-name:
    description: 'Name of the created firewall rule'
    value: ${{ steps.rule-name.outputs.name }}

runs:
  using: 'composite'
  steps:
    - name: Get runner IP
      id: ip
      uses: haythem/public-ip@v1.3
      if: inputs.operation == 'add'
      
    - name: Generate rule name
      id: rule-name
      shell: bash
      run: |
        if [[ "${{ inputs.operation }}" == "add" ]]; then
          RULE_NAME="GithubRunner-$(date +%s)"
          echo "name=$RULE_NAME" >> $GITHUB_OUTPUT
        else
          echo "name=${{ inputs.rule-name }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Add IP to PostgreSQL firewall
      id: add-firewall
      if: inputs.operation == 'add'
      shell: bash
      run: |
        echo "Adding IP ${{ steps.ip.outputs.ipv4 }} to firewall with rule ${{ steps.rule-name.outputs.name }}..."
        
        az postgres flexible-server firewall-rule create \
          --resource-group ${{ inputs.resource-group }} \
          --name ${{ inputs.server-name }} \
          --rule-name ${{ steps.rule-name.outputs.name }} \
          --start-ip-address ${{ steps.ip.outputs.ipv4 }} \
          --end-ip-address ${{ steps.ip.outputs.ipv4 }}
          
        if [ $? -ne 0 ]; then
          echo "Failed to create firewall rule"
          exit 1
        fi
        
    - name: Remove IP from firewall
      if: inputs.operation == 'remove'
      shell: bash
      run: |
        echo "Removing firewall rule ${{ steps.rule-name.outputs.name }}..."
        
        az postgres flexible-server firewall-rule delete \
          --resource-group ${{ inputs.resource-group }} \
          --name ${{ inputs.server-name }} \
          --rule-name ${{ steps.rule-name.outputs.name }} \
          --yes || true